"use strict";
exports.__esModule = true;
exports.DatePicker = exports.valueToDayjs = void 0;
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var antd_1 = require("antd");
var field_1 = tslib_1.__importDefault(require("../field"));
var dayjs_1 = tslib_1.__importDefault(require("dayjs"));
var $MonthPicker = antd_1.DatePicker.MonthPicker, $RangePicker = antd_1.DatePicker.RangePicker, $WeekPicker = antd_1.DatePicker.WeekPicker;
function valueToDayjs(value) {
    return typeof value === 'string'
        ? (0, dayjs_1["default"])(value)
        : typeof value === 'object'
            ? value
            : null;
}
exports.valueToDayjs = valueToDayjs;
function valueArrayToDayjsArray(value) {
    return Array.isArray(value)
        ? value[0] && value[1]
            ? [valueToDayjs(value[0]), valueToDayjs(value[1])]
            : value[0]
                ? [valueToDayjs(value[0])]
                : null
        : null;
}
var DatePicker = function (_a) {
    var name = _a.name, validate = _a.validate, onChange = _a.onChange, fast = _a.fast, value = _a.value, restProps = tslib_1.__rest(_a, ["name", "validate", "onChange", "fast", "value"]);
    return (React.createElement(field_1["default"], { name: name, validate: validate, fast: fast }, function (_a) {
        var value = _a.field.value, _b = _a.form, setFieldValue = _b.setFieldValue, setFieldTouched = _b.setFieldTouched;
        return (React.createElement(antd_1.DatePicker, tslib_1.__assign({ value: valueToDayjs(value), id: name, onChange: function (date, dateString) {
                setFieldValue(name, date ? date.toISOString() : null);
                setFieldTouched(name, true, false);
                onChange && onChange(date, dateString);
            } }, restProps)));
    }));
};
exports.DatePicker = DatePicker;
exports["default"] = exports.DatePicker;
exports.DatePicker.MonthPicker = function (_a) {
    var name = _a.name, validate = _a.validate, onChange = _a.onChange, restProps = tslib_1.__rest(_a, ["name", "validate", "onChange"]);
    return (React.createElement(field_1["default"], { name: name, validate: validate }, function (_a) {
        var value = _a.field.value, _b = _a.form, setFieldValue = _b.setFieldValue, setFieldTouched = _b.setFieldTouched;
        return (React.createElement($MonthPicker, tslib_1.__assign({ value: valueToDayjs(value), onChange: function (date, dateString) {
                setFieldValue(name, date ? date.toISOString() : null);
                setFieldTouched(name, true, false);
                onChange && onChange(date, dateString);
            } }, restProps)));
    }));
};
exports.DatePicker.RangePicker = function (_a) {
    var name = _a.name, validate = _a.validate, onChange = _a.onChange, restProps = tslib_1.__rest(_a, ["name", "validate", "onChange"]);
    return (React.createElement(field_1["default"], { name: name, validate: validate }, function (_a) {
        var value = _a.field.value, _b = _a.form, setFieldValue = _b.setFieldValue, setFieldTouched = _b.setFieldTouched;
        return (React.createElement($RangePicker, tslib_1.__assign({ name: name, value: valueArrayToDayjsArray(value), onChange: function (dates, dateStrings) {
                setFieldValue(name, dates);
                setFieldTouched(name, true, false);
                onChange && onChange(dates, dateStrings);
            } }, restProps)));
    }));
};
exports.DatePicker.WeekPicker = function (_a) {
    var name = _a.name, validate = _a.validate, onChange = _a.onChange, restProps = tslib_1.__rest(_a, ["name", "validate", "onChange"]);
    return (React.createElement(field_1["default"], { name: name, validate: validate }, function (_a) {
        var value = _a.field.value, _b = _a.form, setFieldValue = _b.setFieldValue, setFieldTouched = _b.setFieldTouched;
        return (React.createElement($WeekPicker, tslib_1.__assign({ name: name, value: valueToDayjs(value), onChange: function (date, dateString) {
                setFieldValue(name, date);
                setFieldTouched(name, true, false);
                onChange && onChange(date, dateString);
            } }, restProps)));
    }));
};
//# sourceMappingURL=index.js.map